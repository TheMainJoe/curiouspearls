name: Curious Pearls CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: [ '8.1', '8.2', '8.3' ]
    name: PHP ${{ matrix.php-versions }} Test

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, bcmath, mysql
          coverage: none

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Cache NPM dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-

      - name: Install NPM dependencies
        run: npm install

      - name: Copy .env
        run: cp .env.example .env

      - name: Generate application key
        run: php artisan key:generate

      - name: Run migrations
        env:
          DB_CONNECTION: mysql
          DB_DATABASE: test
          DB_USERNAME: root
          DB_PASSWORD: root
          DB_HOST: 127.0.0.1
        run: php artisan migrate --force

      - name: Run tests
        env:
          DB_CONNECTION: mysql
          DB_DATABASE: test
          DB_USERNAME: root
          DB_PASSWORD: root
          DB_HOST: 127.0.0.1
        run: php artisan test

      - name: Run tests with coverage
        env:
          DB_CONNECTION: mysql
          DB_DATABASE: test
          DB_USERNAME: root
          DB_PASSWORD: root
          DB_HOST: 127.0.0.1
        run: php artisan test --coverage --coverage-html=coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/

      - name: Run PHPStan (static analysis)
        run: vendor/bin/phpstan analyse

      - name: Build frontend assets
        run: npm run build

      - name: Run ESLint (if using JS linting)
        run: npm run lint